package com.mitulagr.tripplanner;import android.content.SharedPreferences;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.preference.PreferenceManager;import android.text.Editable;import android.text.TextWatcher;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import com.google.android.gms.ads.AdRequest;import com.google.android.gms.ads.AdView;import com.google.android.gms.ads.MobileAds;import com.google.android.gms.ads.initialization.InitializationStatus;import com.google.android.gms.ads.initialization.OnInitializationCompleteListener;// TODO: show inr+usd only if expense contains usd/** * A simple {@link Fragment} subclass. * Use the {@link ExpFragment#newInstance} factory method to * create an instance of this fragment. */public class ExpFragment extends Fragment {    // TODO: Rename parameter arguments, choose names that match    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER    private static final String ARG_PARAM1 = "param1";    private static final String ARG_PARAM2 = "param2";    // TODO: Rename and change types of parameters    private String mParam1;    private String mParam2;    public ExpFragment() {        // Required empty public constructor    }    /**     * Use this factory method to create a new instance of     * this fragment using the provided parameters.     *     * @param param1 Parameter 1.     * @param param2 Parameter 2.     * @return A new instance of fragment ExpFragment.     */    // TODO: Rename and change types and number of parameters    public static ExpFragment newInstance(String param1, String param2) {        ExpFragment fragment = new ExpFragment();        Bundle args = new Bundle();        args.putString(ARG_PARAM1, param1);        args.putString(ARG_PARAM2, param2);        fragment.setArguments(args);        return fragment;    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (getArguments() != null) {            mParam1 = getArguments().getString(ARG_PARAM1);            mParam2 = getArguments().getString(ARG_PARAM2);        }    }    private Button AddCat;    private RecyclerView expenses;    private TextView total,Htot,Dtot;    private EditText ExpSearch;    private AdView mAdExp;    private DBHandler db;    private int id;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View rootView =  inflater.inflate(R.layout.fragment_exp, container, false);        expenses = (RecyclerView) rootView.findViewById(R.id.CatExpenses);        AddCat = (Button) rootView.findViewById(R.id.AddCat);        total = (TextView) rootView.findViewById(R.id.TotalExpense);        Htot = (TextView) rootView.findViewById(R.id.textView12);        Dtot = (TextView) rootView.findViewById(R.id.textView13);        ExpSearch = (EditText) rootView.findViewById(R.id.ExpSearch);        db = new DBHandler(getContext());        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());        id = sp.getInt("Current Trip", 0);        Trip trip = db.getTrip(id);        total.setText(trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.exp)));        if(trip.isHom==1){            Htot.setVisibility(View.INVISIBLE);            Dtot.setVisibility(View.INVISIBLE);        }        else{            Htot.setText(trip.Hcur.substring(0,3)+" : "+trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.Hexp)));            Dtot.setText(trip.Dcur.substring(0,3)+" : "+trip.Dcur.substring(6)+" "+String.valueOf(getAmt(trip.Dexp)));            Htot.setVisibility(View.VISIBLE);            Dtot.setVisibility(View.VISIBLE);        }        /*        =============================================================================        Banner Ad        =============================================================================         */        MobileAds.initialize(getActivity(), new OnInitializationCompleteListener() {            @Override            public void onInitializationComplete(@NonNull InitializationStatus initializationStatus) {            }        });        mAdExp = rootView.findViewById(R.id.adExp);        AdRequest adRequestExp = new AdRequest.Builder().build();        mAdExp.loadAd(adRequestExp);        /*        =============================================================================        Expenses Adapter        =============================================================================         */        expenses.setLayoutManager(new LinearLayoutManager(getActivity()));        Adapter_ExpenseMain adt = new Adapter_ExpenseMain(getActivity(),trip);        expenses.setAdapter(adt);        adt.setOnDataChangeListener(new Adapter_ExpenseMain.OnDataChangeListener() {            @Override            public void onDataChanged() {                total.setText(trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.exp)));                Htot.setText(trip.Hcur.substring(0,3)+" : "+trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.Hexp)));                Dtot.setText(trip.Dcur.substring(0,3)+" : "+trip.Dcur.substring(6)+" "+String.valueOf(getAmt(trip.Dexp)));            }        });        /*        =============================================================================        Search        =============================================================================         */        ExpSearch.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                adt.filter(charSequence.toString());            }            @Override            public void afterTextChanged(Editable editable) {            }        });        return rootView;    }    String getAmt(float amt){        String a;        a = String.format("%.0f", amt);        if(Float.parseFloat(a)==amt || Float.parseFloat(a)>1000) return a;        a = String.format("%.1f", amt);        if(Float.parseFloat(a)==amt) return a;        return String.valueOf(amt);    }}