package com.mitulagr.tripplanner;import android.app.Dialog;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Color;import android.graphics.drawable.ColorDrawable;import android.os.Bundle;import androidx.activity.result.ActivityResult;import androidx.activity.result.ActivityResultCallback;import androidx.activity.result.ActivityResultLauncher;import androidx.activity.result.contract.ActivityResultContracts;import androidx.annotation.NonNull;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.preference.PreferenceManager;import android.text.Editable;import android.text.TextWatcher;import android.view.LayoutInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.PopupMenu;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.ads.AdRequest;import com.google.android.gms.ads.AdView;import com.google.android.gms.ads.MobileAds;import com.google.android.gms.ads.initialization.InitializationStatus;import com.google.android.gms.ads.initialization.OnInitializationCompleteListener;// TODO: show inr+usd only if expense contains usd/** * A simple {@link Fragment} subclass. * Use the {@link ExpFragment#newInstance} factory method to * create an instance of this fragment. */public class ExpFragment extends Fragment {    // TODO: Rename parameter arguments, choose names that match    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER    private static final String ARG_PARAM1 = "param1";    private static final String ARG_PARAM2 = "param2";    // TODO: Rename and change types of parameters    private String mParam1;    private String mParam2;    public ExpFragment() {        // Required empty public constructor    }    /**     * Use this factory method to create a new instance of     * this fragment using the provided parameters.     *     * @param param1 Parameter 1.     * @param param2 Parameter 2.     * @return A new instance of fragment ExpFragment.     */    // TODO: Rename and change types and number of parameters    public static ExpFragment newInstance(String param1, String param2) {        ExpFragment fragment = new ExpFragment();        Bundle args = new Bundle();        args.putString(ARG_PARAM1, param1);        args.putString(ARG_PARAM2, param2);        fragment.setArguments(args);        return fragment;    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (getArguments() != null) {            mParam1 = getArguments().getString(ARG_PARAM1);            mParam2 = getArguments().getString(ARG_PARAM2);        }    }    private Button AddCat;    private RecyclerView expenses;    private TextView total,Htot,Dtot;    private EditText ExpSearch;    private AdView mAdExp;    private DBHandler db;    private int id;    private Trip trip;    Adapter_ExpenseMain adt;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View rootView =  inflater.inflate(R.layout.fragment_exp, container, false);        AddCat = (Button) rootView.findViewById(R.id.AddCat);        expenses = (RecyclerView) rootView.findViewById(R.id.CatExpenses);        AddCat = (Button) rootView.findViewById(R.id.AddCat);        total = (TextView) rootView.findViewById(R.id.TotalExpense);        Htot = (TextView) rootView.findViewById(R.id.textView12);        Dtot = (TextView) rootView.findViewById(R.id.textView13);        ExpSearch = (EditText) rootView.findViewById(R.id.ExpSearch);        db = new DBHandler(getContext());        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());        id = sp.getInt("Current Trip", 0);        trip = db.getTrip(id);        total.setText(trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.exp)));        if(trip.isHom==1){            Htot.setVisibility(View.INVISIBLE);            Dtot.setVisibility(View.INVISIBLE);        }        else{            Htot.setText(trip.Hcur.substring(0,3)+" : "+trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.Hexp)));            Dtot.setText(trip.Dcur.substring(0,3)+" : "+trip.Dcur.substring(6)+" "+String.valueOf(getAmt(trip.Dexp)));            Htot.setVisibility(View.VISIBLE);            Dtot.setVisibility(View.VISIBLE);        }        /*        =============================================================================        Add Category        =============================================================================         */        AddCat.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                addCategory(new ExpCat("",0),true);            }        });        /*        =============================================================================        Banner Ad        =============================================================================         */        MobileAds.initialize(getActivity(), new OnInitializationCompleteListener() {            @Override            public void onInitializationComplete(@NonNull InitializationStatus initializationStatus) {            }        });        mAdExp = rootView.findViewById(R.id.adExp);        AdRequest adRequestExp = new AdRequest.Builder().build();        mAdExp.loadAd(adRequestExp);        /*        =============================================================================        Expenses Adapter        =============================================================================         */        expenses.setLayoutManager(new LinearLayoutManager(getActivity()));        adt = new Adapter_ExpenseMain(getActivity(),trip);        expenses.setAdapter(adt);        ActivityResultLauncher<Intent> startActivityForResult = registerForActivityResult(        new ActivityResultContracts.StartActivityForResult(),        new ActivityResultCallback<ActivityResult>() {            @Override            public void onActivityResult(ActivityResult result) {                trip = db.getTrip(id);                adt.localDataSet = db.getAllExpCats(trip.srno);                adt.filter(adt.qry);                adt.notifyDataSetChanged();                if (adt.mOnDataChangeListener != null)                    adt.mOnDataChangeListener.onDataChanged();            }        });        adt.setOnMainClickListener(new Adapter_ExpenseMain.OnMainClickListener() {            @Override            public void onMainClicked(int position) {                Intent i = new Intent(getContext(), ExpActivity.class);                i.putExtra("pos",position);                startActivityForResult.launch(i);            }        });        adt.setOnDataChangeListener(new Adapter_ExpenseMain.OnDataChangeListener() {            @Override            public void onDataChanged() {                //Toast.makeText(getContext(),String.valueOf(getAmt(db.getTrip(id).exp)), Toast.LENGTH_SHORT).show();                total.setText(trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.exp)));                Htot.setText(trip.Hcur.substring(0,3)+" : "+trip.Hcur.substring(6)+" "+String.valueOf(getAmt(trip.Hexp)));                Dtot.setText(trip.Dcur.substring(0,3)+" : "+trip.Dcur.substring(6)+" "+String.valueOf(getAmt(trip.Dexp)));            }        });        adt.setOnItemLongClickListener(new Adapter_ExpenseMain.LongClickListener() {            @Override            public void onItemLongClickListener(View view, int position) {                showEditExpCat(view,db.getExpCatPos(adt.localDataSet.get(position)));            }        });        /*        =============================================================================        Search        =============================================================================         */        ExpSearch.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                adt.filter(charSequence.toString());            }            @Override            public void afterTextChanged(Editable editable) {            }        });        return rootView;    }    String getAmt(float amt){        if(amt<0.005f) return "0";        String a;        a = String.format("%.0f", amt);        if(Float.parseFloat(a)==amt || amt>1000.0f) return a;        a = String.format("%.1f", amt);        if(Float.parseFloat(a)==amt || amt>100.0f) return a;        return String.format("%.2f", amt);    }    void addCategory(ExpCat expCat, boolean isNew){        Dialog curd = new Dialog(getActivity());        curd.setContentView(R.layout.editdaycity);        curd.getWindow();        curd.getWindow().setLayout(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);        curd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));        curd.show();        TextView Title = (TextView) curd.findViewById(R.id.textViewed);        EditText Place = (EditText) curd.findViewById(R.id.editTexted);        Button Ok = (Button) curd.findViewById(R.id.buttoned);        Title.setText("Category Name");        if(!isNew) Place.setText(expCat.category);        MobileAds.initialize(getActivity(), new OnInitializationCompleteListener() {            @Override            public void onInitializationComplete(@NonNull InitializationStatus initializationStatus) {            }        });        AdView mAdEd = curd.findViewById(R.id.adEd);        AdRequest adRequest = new AdRequest.Builder().build();        mAdEd.loadAd(adRequest);        Ok.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                expCat.category = Place.getText().toString();                if(isNew){                    expCat.imageId = getResources().getIdentifier("ic_baseline_star_24", "drawable", "com.mitulagr.tripplanner");                    expCat.id = db.getExpCatsCount();                    expCat.fid = id;                    db.addExpCat(expCat);                    adt.qry = "";                    ExpSearch.setText("");                    if(adt.mOnMainClickListener!=null) adt.mOnMainClickListener.onMainClicked(db.getExpCatPos(expCat));                }                else db.updateExpCat(expCat);                adt.localDataSet = db.getAllExpCats(id);                adt.filter(adt.qry);                adt.notifyDataSetChanged();                curd.dismiss();            }        });    }    void showEditExpCat(View view, int pos){        PopupMenu popup = new PopupMenu(getActivity(),view);        popup.getMenuInflater()                .inflate(R.menu.edit1, popup.getMenu());        popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {            @Override            public boolean onMenuItemClick(MenuItem menuItem) {                switch (menuItem.getItemId()) {                    case R.id.e0:                        adt.showExpense(db.getExpCat(id,pos).imageId,                                pos,                                new Exp("",0.0f,1),                                true);                        break;                    case R.id.e1:                        // TODO: Delete related table entries, confirm before deleting (same everywhere else also)                        db.deleteExpCat(db.getExpCat(id,pos));                        adt.localDataSet = db.getAllExpCats(id);                        adt.notifyDataSetChanged();                        break;                    case R.id.e2:                        addCategory(db.getExpCat(id,pos),false);                        break;                    case R.id.e3:                        if(pos==0) break;                        ExpCat e1 = db.getExpCat(id,pos-1);                        ExpCat e2 = db.getExpCat(id,pos);                        int temp = e1.id;                        e1.id = e2.id;                        e2.id = temp;                        db.updateExpCat(e1);                        db.updateExpCat(e2);                        adt.localDataSet = db.getAllExpCats(id);                        adt.notifyDataSetChanged();                        break;                    case R.id.e4:                        if(pos== adt.getItemCount()-1) break;                        ExpCat e3 = db.getExpCat(id,pos);                        ExpCat e4 = db.getExpCat(id,pos+1);                        int temp1 = e3.id;                        e3.id = e4.id;                        e4.id = temp1;                        db.updateExpCat(e3);                        db.updateExpCat(e4);                        adt.localDataSet = db.getAllExpCats(id);                        adt.notifyDataSetChanged();                        break;                }                return true;            }        });        popup.show();    }}